	MODULE radxas

;External low-level disk driver V1.2
;for OMNIPROG ROM Programmer
;by Michael Borisov (C) 1995

CP_M	EQU	0

CLR_ERROR:
	XOR	A
	LD	(ERR_CO),A
	RET

INIALL:	CALL	INIFDC
	CALL	MOTOR_ON
	JR	RES_HEAD

INIFDC:
	DI
	CALL	CLR_ERROR
	LD	A,00011000B
	LD	C,0FFH
	CALL	OUT_C_A
	LD	A,00011100B
	CALL	OUT_C_A
	LD	HL,300
	CALL	PAUSE
	LD	A,0D0H
	LD	C,1FH
	CALL	OUT_C_A
	LD	HL,1000
	JP	PAUSE

RES_HEAD:
	DI
	LD	A,8
	JR	POSRT

MOTOR_ON:
	DI
	CALL	INIFDC
	CALL	GET_POS
	CALL	POSITION
	LD	HL,2134H
	JP	PAUSE

POSITION:
	DI
	SRL	A
	CALL	STORE_POS
	LD	C,7FH
	CALL	OUT_C_A
	CCF
	SBC	A,A
	AND	00010000B	;SIDE
	LD	B,A
	LD	A,(DRIVE_NO)
	OR	B
	OR	00001100B
	LD	C,0FFH
	CALL	OUT_C_A
	CALL	BREAK_KEY
	LD	C,1FH
	LD	A,18H	;POSITION CMD
POSRT:	CALL	OUT_C_A
	CALL	WT_IRQ
	RET

DRIVE:
	AND	3
	LD	(DRIVE_NO),A
	CALL	GET_POS
	LD	C,03FH
	CALL	OUT_C_A
	CALL	CLR_ERROR
	RET

RETRY:	CALL	CLR_ERROR
	CALL	MOTOR_ON
	JR	RWRETR

IGNORE:	CALL	CLR_ERROR
	CALL	MOTOR_ON
	LD	HL,(DMA_ADDR)
	LD	DE,100H
	ADD	HL,DE
	LD	DE,(RW_LOC)
	JR	RWIGNR

READGR:	LD	A,080H
	LD	C,0
	JR	RDWRGR

WRITGR:	LD	A,0A0H
	LD	C,1
RDWRGR:	LD	(RWCMD+1),A
	LD	A,C
	LD	(DMATYP+1),A
	LD	A,B
	LD	(SEC_REMAIN),A
	LD	(ERR_SP),SP
	CALL	CLR_ERROR
RWGPOS:	LD	A,D
	CALL	POSITION

RWGNXT:	LD	(DMA_ADDR),HL
	LD	(RW_LOC),DE

RWRETR:	LD	DE,(RW_LOC)
	LD	HL,(DMA_ADDR)
	CALL	BREAK_KEY
	LD	C,05FH
	LD	A,E
	INC	A
	CALL	OUT_C_A
RWCMD:	LD	A,0
	LD	C,1FH
	CALL	OUT_C_A
	LD	C,7FH
DMATYP:	LD	A,0
	OR	A
	JR	NZ,RWGR0
	CALL	DMA_RD
	JR	RWGR1
RWGR0:	CALL	DMA_WR
RWGR1:	LD	A,B
	OR	A
	LD	A,1	;NO DISK
	JP	Z,ERR_RET
	CALL	IN_1F
	LD	C,A
	AND	01FH
	JR	Z,RWGR2
	LD	A,4	;SNF/CRC ERR
	JP	ERR_RET

RWGR2:	BIT	6,C
	LD	A,2	;WPRT
	JP	NZ,ERR_RET
RWIGNR:	
	LD	DE,(RW_LOC)
	INC	E
	BIT	4,E	;16 SECS/TRK
	JR	Z,XALAL
	LD	E,0
	INC	D
	SCF
XALAL:	LD	A,(SEC_REMAIN)
	DEC	A
	LD	(SEC_REMAIN),A
	RET	Z
	JR	NC,RWGNXT
	JR	RWGPOS

BREAK_KEY:
	CALL	BRK
	RET	C
	LD	A,3
ERR_RET:
	LD	(ERR_CO),A
	LD	A,0D0H
	LD	C,1FH
	CALL	OUT_C_A
	LD	SP,(ERR_SP)
	RET

STORE_POS:
	PUSH	HL
	PUSH	AF
	LD	HL,DRV_HEAD
	LD	A,(DRIVE_NO)
	ADD	A,L
	LD	L,A
	ADC	A,H
	SUB	L
	LD	H,A
	POP	AF
	LD	(HL),A
	POP	HL
	RET

GET_POS:
	PUSH	HL
	LD	HL,DRV_HEAD
	LD	A,(DRIVE_NO)
	ADD	A,L
	LD	L,A
	ADC	A,H
	SUB	L
	LD	H,A
	LD	A,(HL)
	POP	HL
	RET

PAUSE:	PUSH	AF
PAU_0:	DEC	HL
	LD	A,H
	OR	L
	JR	NZ,PAU_0
	POP	AF
	RET

;'RADISK V1.2 (C) 1995, Michael Borisov'
;TR-DOS port routines

IFE	DB 	CP_M	;------------------
BRK	EQU	1F54H

OUT_C_A:
	PUSH	HL
	LD	HL,2A53H
	EX	(SP),HL
	JP	3D30H

DMA_RD:	PUSH	HL
	LD	HL,3FD5H
	EX	(SP),HL
	JP	3D30H

DMA_WR:	PUSH	HL
	LD	HL,3FBAH
	EX	(SP),HL
	JP	3D30H

WT_IRQ:	PUSH	HL
	LD	HL,3FE5H
	EX	(SP),HL
	JP	3D30H

IRZ:	LD	HL,3F33H
	PUSH	HL
	JP	3D30H

IN_1F:	PUSH	HL
	PUSH	BC
	PUSH	DE
	XOR	A
	LD	C,3FH
	CALL	OUT_C_A
	LD	A,0AH
	LD	C,05FH
	CALL	OUT_C_A
	LD	D,01H
	CALL	IRZ
	CALL	GET_POS
	LD	C,3FH
	CALL	OUT_C_A
	LD	A,B
	POP	DE
	POP	BC
	POP	HL
	RET

DRIVE_NO:
	DB	00

DRV_HEAD:
	DB	00	;A
	DB	00	;B
	DB	00	;C
	DB	00	;D

TTBL_ADR:
	DW	0000
DMA_ADDR:
	DW	0000
RW_LOC:	DW	0000
SEC_REMAIN:
	DB	00
ERR_SP:	DW	0000
ERR_CO:	DB	0FFH

	ENDMODULE
